@model NuGist.Web.Services.Gists.GistViewModel
@{
    ViewData["Title"] = Model.Name;
    var id = ViewContext.RouteData.Values["id"];
}

<div class="well form-horizontal">
    <h2>Gist: @Model.Name, @Model.Version</h2>

    <div class="form-group">
        <label>New version:</label>
        <input type="text" class="form-control" id="version" value="@Model.Version">
    </div>

    @foreach (var file in Model.Files)
    {
        <div class="form-group">
            <label>File name:</label>
            <input type="text" class="form-control" id="filename" value="@file.Filename">

            <div class="code-editor" style="width:100%;height:400px;border:1px solid grey" data-id="@file.Id" data-type="@file.Type" data-content="@file.Content"></div>
        </div>
    }

    <button id="btn-update" type="submit" class="btn btn-raised btn-primary">Update</button>
</div>

@section scripts
{
    <script src="~/lib/monaco-editor/loader.js"></script>
    <script>
        var editor = null;

        require.config({ paths: { 'vs': '/lib/monaco-editor' } });
        require(['vs/editor/editor.main'], function () {
            $(".code-editor").each(function (index, value) {
                editor = monaco.editor.create(value, {
                    value: [
                        $(value).attr('data-content')
                    ].join('\n'),
                    language: 'csharp'
                });
            })
        });

        $(function () {
            $("#btn-update").click(function (e) {
                e.preventDefault();
                $.ajax({
                    method: "post",
                    url: "/api/gist/@id",
                    contentType: "application/json",
                    data: JSON.stringify({
                        version: $("#version").val(),
                        files: [{
                            id: @Model.Files[0].Id,
                            content: editor.getValue()
                        }]
                    }),
                    success: function (data) {
                        alert('updated')
                    },
                    error: function (xhr, status, error) {
                        alert(xhr.responseText)
                    }
                });

                return false;
            })
        })
    </script>
}
